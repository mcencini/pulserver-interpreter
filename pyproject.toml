[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "pulserver_interpreter"
description = "A vendor-agnostic, real-time Pulseq interpreter and builder."
readme = "README.rst"

requires-python = ">=3.10"
dynamic = ["version"]

license = {file = "LICENSE"}
keywords = ["pulseq", "mri", "sequence-design", "pulse-sequences", "mri-sequences"]

authors = [
  {name = "Matteo Cencini", email = "matteo.cencini@gmail.com" } # Optional
]

# Classifiers help users find your project by categorizing it.
# For a list of valid classifiers, see https://pypi.org/classifiers/
classifiers = [  # Optional
  # How mature is this project? Common values are
  #   3 - Alpha
  #   4 - Beta
  #   5 - Production/Stable
  "Development Status :: 3 - Alpha",

  # Indicate who your project is intended for
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",

  # Specify the Python versions you support here. In particular, ensure
  # that you indicate you support Python 3. These classifiers are *not*
  # checked by "pip install". See instead "python_requires" below.
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]

dependencies = [
"pypulseq",
"ipywidgets",
]

[project.optional-dependencies] # Optional
dev = [
    "black", 
    "isort", 
    "ruff", 
    "pre-commit"
]
doc = [
    "sphinx-book-theme",
    "sphinx-copybutton", 
    "sphinx-gallery",
    "matplotlib",
    "coverage",
    "codecov"
]
test = [
    "pytest<8.0.0", 
    "pytest-cov", 
    "pytest-xdist", 
    "pytest-sugar", 
    "pytest-cases"
]

# List URLs that are relevant to your project
# This field corresponds to the "Project-URL" and "Home-Page" metadata fields:
[project.urls]  # Optional
"Homepage" = "https://github.com/FiRMLAB-Pisa/pulserver-interpreter"
"Bug Reports" = "https://github.com/FiRMLAB-Pisa/pulserver-interpreter/issues"
"Source" = "https://github.com/FiRMLAB-Pisa/pulserver-interpreter"

[tool.setuptools.packages.find]
where=["src"]

[tool.setuptools_scm]
write_to = "src/pulserver_interpreter/_version.py"
version_scheme = "python-simplified-semver"
local_scheme="no-local-version"
fallback_version="v99-dev"

# Formatting using black.
[tool.black]

# Linting using ruff.
[tool.ruff]
line-length = 120
extend-exclude = ["__init__.py"]
exclude = ["doc/**"]

# RUFF section
[tool.ruff.lint]
select = [
  "A",   # flake8-builtins
  "ARG", # flake8-unused-arguments
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "COM", # flake8-commas
  # "D",   # pydocstyle
  # "E",   # pycodestyle errors
  "F", # Pyflakes
  # "FA", # flake8-future-annotations
  "I", # isort
  # "N",   # pep8-naming
  "NPY", # NumPy-specific rules
  "RUF", # Ruff-specific rules
  "S",   # flake8-bandit
  "SIM", # flake8-simplify
  # "UP",  # pyupgrade
  "PIE", # flake8-pie
  "PTH", # flake8-use-pathlib
  "Q",   # flake8-quotes
  "W",   # pycodestyle warnings
  "YTT", # flake8-2020
  # "ERA", # flake8-eradicate
]

extend-select = [
  # "ANN001", #  type annotation for function argument
  # # "ANN201", #  return type annonation public function
  # # "ANN205", #  return type annonation static method
  # # "ANN401", #  any type annotation
  # # "BLE001", #  blind exception
  # # "D107",   #  missing docstring in __init__
  # # "D417",   #  undocumented-parameter
]

ignore = [
  "B028",   #  explicit "stacklevel" arg in warnings
  "COM812", #  missing-trailing-comma (conflict with formatter)
  "PTH123", #  use of Path.open
  "S101",   #  use of assert
  "S307",   #  use of possibly insecure eval function
  "S311",   #  standard pseudo-random generators
  "S324",   #  insecure hash function
  "SIM108", #  if-else-block-instead-of-if-exp
  "SIM115", #  use of context manager
]

[tool.ruff.lint.isort]
force-single-line = false
split-on-trailing-comma = false

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.format]
quote-style = "single"
skip-magic-trailing-comma = false

[tool.isort]
profile="black"

[tool.pytest.ini_options]
minversion = "6.0"
pythonpath  = ["tests"]
testpaths=["tests"]
addopts = [
    "--import-mode=importlib",
    "--cov=pulserver_interpreter",
    "--cov-report=term-missing",
    "--cov-report=xml"
]

[tool.pylsp-mypy]
enabled = false
live_mode = false

[tool.mypy]
ignore_missing_imports = true
